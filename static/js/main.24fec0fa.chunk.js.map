{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortby","sortByOptions","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","key","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24fec0fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Business.css\"\r\n\r\nclass Business extends Component {\r\n    render() {\r\n        return(\r\n            <div className = \"Business\">\r\n                <div className = \"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className = \"Business-information\">\r\n                    <div className = \"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className = \"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className = \"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Business;","import React, { Component } from \"react\";\r\nimport './BusinessList.css';\r\nimport Business from \"../Business/Business\"\r\n\r\nclass BusinessList extends Component {\r\n    render() {\r\n        return(\r\n            <div className = \"BusinessList\">\r\n                {this.props.businesses.map((business) => {return(<Business business= {business} id={business.id}/>);})}            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React, { Component } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {term: \"\",\r\n                      location: \"\",\r\n                       sortby: \"best_match\" }\r\n        this.sortByOptions = {\r\n                        \"Best Match\" : \"best_match\",\r\n                        \"Highest Rated\" : \"rating\",\r\n                        \"Most Reviwed\" : \"review_count\",\r\n                    \r\n                    }\r\n        this.handleTermChange = this.handleTermChange.bind(this)\r\n        this.handleLocationChange = this.handleLocationChange.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n                    \r\n    }\r\n    \r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortby === sortByOption){\r\n            return 'active';\r\n        }\r\n        else{\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortby : sortByOption });\r\n    }\r\n\r\n    handleTermChange(event){\r\n        this.setState({term : event.target.value});\r\n\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortby)\r\n        event.preventDefault();\r\n\r\n    }\r\n    renderSortByOptions() {\r\n        return (\r\n            Object.keys(this.sortByOptions).map(sortByOption => {\r\n                let sortByOptionValue = this.sortByOptions[sortByOption];\r\n                return <li className = {this.getSortByClass(sortByOptionValue)} \r\n                            key = {sortByOptionValue} \r\n                            onClick = {this.handleSortByChange.bind(this, sortByOptionValue )}>\r\n                                {sortByOption}\r\n                        </li>;\r\n            })\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className= \"SearchBar\">\r\n                <div className = \"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className = \"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder = \"Search Business\" />\r\n                    <input placeholder = \"Where?\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                <div className = \"SearchBar-submit\">\r\n                    <a onClick = {this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SearchBar;","const apiKey = \"gVo-Z5TCP-6_IAD9xb9JxHEXcYujgxx1VQjprc6bgdn41nBmmcvnRuAK3TB4WE6uXY4aY9T771G6IICtEIwn-48_yGb0XYCUbT2c_LoS_4tkuyW3I6B0v0z-vNsBX3Yx\";\r\nconst Yelp = {\r\n    search(term, location, sortby) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortby}`,\r\n        {headers: {Authorization: `Bearer ${apiKey}`}\r\n    }).then(response => {\r\n            return response.json();\r\n          }).then(jsonResponse => {\r\n            if(jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map((business)=>({\r\n                    id: business.id,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.location.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.review_count\r\n                }));\r\n            }\r\n          });\r\n        }\r\n      };\r\nexport default Yelp;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Yelp from \"../../util/Yelp\";\n\nclass App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {businesses: []};\n    this.searchYelp= this.searchYelp.bind(this);\n  }\n  searchYelp(term,location,sortby) {\n    Yelp.search(term, location, sortby).then((businesses)=> {this.setState({businesses: businesses})})\n\n  }\n  render(){\n    return (\n      <div className = \"App\">\n        <SearchBar searchYelp = {this.searchYelp}/>\n        <BusinessList businesses = {this.state.businesses}/>\n      </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}